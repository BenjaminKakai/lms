name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set Spring Profile
        run: echo "SPRING_PROFILES_ACTIVE=ci" >> $GITHUB_ENV

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -Pprofile=ci # Assuming you're using a project property to set the active profile

      - name: Run tests
        run: ./gradlew test -Pprofile=ci

  publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github  # This is used for Maven projects; for Gradle, you'll configure this in your build.gradle
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # if you're signing artifacts
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Publish to GitHub Packages
        run: ./gradlew publish
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
